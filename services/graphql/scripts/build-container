#!/usr/bin/env bash

SERVICE_NAME="graphql-service"
TAG=${TAG:-$SERVICE_NAME}
VERSION=${VERSION:-""}
REGISTRY=${REGISTRY:-"gcf-artifacts"}
REGION=${REGION:-""}
PROJECT=${PROJECT:-""}
INC_MAJOR=${INC_MAJOR:-false}
INC_MINOR=${INC_MINOR:-false}
INC_PATCH=${INC_PATCH:-false}

while [ $# -gt 0 ]; do
   if [[ $1 == *"--"* ]]; then
        PARAM="${1/--/}"
        PARAM="$(echo $PARAM | tr 'a-z' 'A-Z')"
        PARAM="$(echo $PARAM | tr '-' '_')"
        if [[ -z $2 ]] || [[ $2 == *"--"* ]] || [[ $2 == "" ]]; then
          declare $PARAM=true
        else
          declare $PARAM="$2"
        fi
   fi
  shift
done

[[ -z $REGION ]] && { echo "Missing required flag [region]. Exiting."; exit 1;}

if [[ -z $VERSION ]]; then
  PACKAGE_JSON_VERSION="$(jq -r '.version' package.json)"

  MAJOR=$(echo $PACKAGE_JSON_VERSION | cut -d. -f1)
  MINOR=$(echo $PACKAGE_JSON_VERSION | cut -d. -f2)
  PATCH=$(echo $PACKAGE_JSON_VERSION | cut -d. -f3)

  if [ $INC_MAJOR == true ]; then
    MAJOR=$(expr $MAJOR + 1)
  fi

  if [ $INC_MINOR == true ]; then
    MINOR=$(expr $MINOR + 1)
  fi

  if [ $INC_PATCH == true ]; then
    PATCH=$(expr $PATCH + 1)
  fi

  if [[ ( $INC_MAJOR == true ) || ( $INC_MINOR == true ) || ( $INC_PATCH == true ) ]]; then
    VERSION="$MAJOR.$MINOR.$PATCH"
    echo "[ $(date +%T) ] Incrementing package.json version. Was $PACKAGE_JSON_VERSION will be $VERSION."
  fi

  if [[ ( $INC_MAJOR == false ) && ( $INC_MINOR == false ) && ( $INC_PATCH == false ) ]]; then
    echo "[ $(date +%T) ] Missing flag [version]. Using version from package.json ($PACKAGE_JSON_VERSION)."
    VERSION=$PACKAGE_JSON_VERSION
  fi
fi

if [[ -z $PROJECT ]]; then
  GCLOUD_PROJECT="$(gcloud config get core/project)"
  if [[ -z $GCLOUD_PROJECT ]]; then
    echo "Missing flag [project] and no gcloud default project set. Exiting."
    exit 1
  else
    echo "[ $(date +%T) ] Missing flag [project]. Using gcloud default ($GCLOUD_PROJECT)."
    PROJECT=$GCLOUD_PROJECT
  fi
fi

echo "[ $(date +%T) ] Building container $TAG:$VERSION."

docker build . -t $TAG:$VERSION --platform linux/amd64
docker tag $TAG:$VERSION "$REGION-docker.pkg.dev/$PROJECT/$REGISTRY/$TAG:$VERSION"

echo "[ $(date +%T) ] Built container $TAG:$VERSION."

TMP=$(mktemp)
jq --arg v "$VERSION" '.version = $v' package.json > "$TMP" && mv "$TMP" package.json
echo "[ $(date +%T) ] Updated package.json version ($VERSION)."
